!function(){"use strict";function e(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class t{constructor(t,i,s){e(this,"_handleLikeButton",(()=>{this._cardLikeButton.classList.toggle(this._cardLikeActiveSelector)})),e(this,"_handleDeleteCard",(()=>this._element.remove())),e(this,"getCardElement",(()=>(this._element=this._getCardTemplate(),this._imageElement=this._element.querySelector(this._imageElSelector),this._imageElement.style.backgroundImage="url(".concat(this._link,")"),this._element.querySelector(".cards__title").textContent=this._title,this._addEventListeners(),this._element))),this._title=t.title,this._link=t.link,this._handleCardClick=s,this._cardSelector=i.cardSelector,this._cardLikeSelector=i.cardLikeSelector,this._cardLikeActiveSelector=i.cardLikeActiveSelector,this._cardDeleteSelector=i.cardDeleteSelector,this._imageElSelector=i.imageElSelector,this._cardsTemplate=document.querySelector("#cards-template")}_getCardTemplate(){return this._cardsTemplate.content.querySelector(this._cardSelector).cloneNode(!0)}_addEventListeners(){this._cardLikeButton=this._element.querySelector(this._cardLikeSelector),this._cardDeleteButton=this._element.querySelector(this._cardDeleteSelector),this._cardLikeButton.addEventListener("click",this._handleLikeButton),this._cardDeleteButton.addEventListener("click",this._handleDeleteCard),this._imageElement.addEventListener("click",(()=>{this._handleCardClick(this._title,this._link)}))}}function i(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}class s{constructor(e,t){i(this,"_showInputError",((e,t)=>{const i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),i.textContent=t,i.classList.add(this._errorClass)})),i(this,"_hideError",(e=>{const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)})),i(this,"_checkValidity",(e=>{e.validity.valid?this._hideError(e):this._showInputError(e,e.validationMessage)})),i(this,"_setEventListeners",(()=>{this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e),this._toggleButtonState()}))}))})),i(this,"_checkIfFormValid",(()=>this._inputElements.every((e=>e.validity.valid)))),i(this,"_toggleButtonState",(()=>{this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._checkIfFormValid()?(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1):(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0)})),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners()}}class r{constructor(e){var t,i;i=e=>{e.preventDefault(),"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[t]=i,this._popupElement=document.querySelector(e)}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("button_type_close"))&&this.close()}))}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}}class o extends r{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".popup__form"),this._handleFormSubmit=t}_getInputValues(){const e=[...this._popupForm.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const n=document.querySelector(".popup__form_type_profile"),l=document.querySelector(".popup__form_type_add-card"),a=document.querySelector(".popup__input_description_name"),c=document.querySelector(".popup__input_description_job"),p=document.querySelector(".button_type_edit"),_=document.querySelector(".button_type_add"),u={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".button_type_submit",inactiveButtonClass:"button_type_submit-disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},d=[{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}].reverse(),h=new class extends r{open(e,t){this._popupElement.querySelector(".popup__caption").textContent=e,this._popupElement.querySelector(".popup__preview-image").src=t,this._popupElement.querySelector(".popup__preview-image").alt=e,super.open()}}(".popup_type_preview"),m=e=>new t({title:e.title,link:e.link},{cardsTemplate:"#cards-template",cardSelector:".cards__card",imageElSelector:".cards__image",cardLikeSelector:".button_style_like",cardLikeActiveSelector:"button_style_full",cardDeleteSelector:".button_type_delete"},((e,t)=>{h.open(e,t)})),E=new class{constructor(e,t){let{items:i,renderer:s}=e;this._items=i,this._renderer=s,this._container=document.querySelector(t)}render(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:d,renderer:e=>{const t=m(e);E.addItem(t.getCardElement())}},".cards__list");E.render();const S=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:i}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}setUserInfo(e){let{name:t,job:i}=e;this._profileName.textContent=t,this._profileJob.textContent=i}}({profileNameSelector:".profile__name",profileJobSelector:".profile__job"}),b=new o(".popup_type_profile",(e=>{S.setUserInfo(e)})),y=new o(".popup_type_add-card",(e=>{let{nameInput:t,linkInput:i}=e;const s=m({title:t,link:i});E.addItem(s.getCardElement())}));b.setEventListeners(),y.setEventListeners(),h.setEventListeners();const v=new s(u,n),f=new s(u,l);v.enableValidation(),f.enableValidation(),_.addEventListener("click",(()=>{f.resetValidation(),y.open()})),p.addEventListener("click",(()=>{v.resetValidation(),b.open();const e=S.getUserInfo();a.value=e.name,c.value=e.job}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,